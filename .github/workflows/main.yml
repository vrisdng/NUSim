name: Test, Build and Deploy 

on: 
  push: 
    branches:
      - main
      - development
      - tester
  pull_request:
    branches:
      - main
      - development 
      - tester

jobs:
  free-disk-space:
    runs-on: ubuntu-latest
    steps:

    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@v1.3.1
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

  test: 
    name: Test my project ðŸ§ª
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build 
    runs-on: ubuntu-latest
    needs: free-disk-space
    steps:
      # Checkout (without LFS)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Git LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v4
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      # Cache
      - uses: actions/cache@v4
        with:
          path: './NUS_Simulator/Library'
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: './NUS_Simulator'
          targetPlatform: WebGL
          unityVersion: auto 
          buildName: WebGL 
          buildsPath: './build'

      # Output
      - uses: actions/upload-artifact@v4
        with:
          name: build-WebGL
          path: './build/WebGL'

  deployToGitHubPages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: false

      - name: Download WebGL Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-WebGL
          path: './build/WebGL'

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: './build/WebGL/WebGL'
          commit-message: Deploy
          single-commit: true

      - name: Cleanup to avoid storage limit
        uses: geekyeggo/delete-artifact@v5
        with:
          name: build-WebGL    