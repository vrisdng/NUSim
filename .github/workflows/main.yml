name: Test, Build, and Deploy with GameCI
run-name: Test, Build, and Deploy with GameCI
on:
  push:
    branches:
      - main
      - development
      - development-mai-v2
    paths:
      - 'Assets/**'
      - 'Packages/**'
      - 'ProjectSettings/**'
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main
      - development
      - development-mai-v2
    paths:
      - 'Assets/**'
      - 'Packages/**'
      - 'ProjectSettings/**'
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      release_platform:
        description: 'Release to [iOS, WebGL, testFlight]'
        required: false
        default: ''
jobs:
  testRunner:
    name: Run Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true

      - name: Cache Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-test
          restore-keys: |
            Library-test
    
      - name: Run Tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

  buildWebGL:
    needs: testRunner
    name: Build for WebGL 🖥️
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout Repository 
        uses: actions/checkout@v3
        with:  
          fetch-depth: 0  
          lfs: true  

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-build-WebGL
          restore-keys: |
            Library-build-
            Library-

      - name: Build Unity Project
        id: build 
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-WebGL
          path: build

  deployPages:
    needs: buildWebGL
    name: Deploy to Github Pages 🚀
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:  
          fetch-depth: 0  
          lfs: true

      - name: Download WebGL artifacts 
        uses: actions/download-artifact@v3
        with:
          name: build-WebGL
          path: build/WebGL 

      - name: Display structure of root files
        run: ls -R
        working-directory: build

      - name: Deploy to GitHub page 🚀
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: build
          commit-message: Deploy
          single-commit: true

      - name: Cleanup to avoid storage limit
        uses: geekyeggo/delete-artifact@v2
        with:
          name: build-WebGL
